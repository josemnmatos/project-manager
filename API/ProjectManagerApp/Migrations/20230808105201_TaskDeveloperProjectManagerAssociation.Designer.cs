// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagerApp.DbContexts;

#nullable disable

namespace ProjectManagerApp.Migrations
{
    [DbContext(typeof(ProjectManagerContext))]
    [Migration("20230808105201_TaskDeveloperProjectManagerAssociation")]
    partial class TaskDeveloperProjectManagerAssociation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectManagerApp.Entities.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jmarkdev@email.com",
                            FirstName = "Mark",
                            LastName = "Anthony",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "annadev@email.com",
                            FirstName = "Anna",
                            LastName = "Peters",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johnmanager@email.com",
                            FirstName = "John",
                            LastName = "Marks",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 100.0,
                            ManagerId = 1,
                            Name = "Calculator"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 5000.0,
                            ManagerId = 1,
                            Name = "Weather App"
                        });
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deadline = new DateTime(2023, 9, 8, 10, 52, 1, 150, DateTimeKind.Utc).AddTicks(3734),
                            Description = "Build buttons and outer interface",
                            DeveloperId = 2,
                            Name = "Build Interface",
                            ProjectId = 1,
                            State = 2
                        },
                        new
                        {
                            Id = 2,
                            Deadline = new DateTime(2023, 9, 8, 10, 52, 1, 150, DateTimeKind.Utc).AddTicks(3740),
                            Description = "Build logic for the sum operation",
                            DeveloperId = 2,
                            Name = "Make sum logic",
                            ProjectId = 1,
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            Deadline = new DateTime(2023, 9, 12, 10, 52, 1, 150, DateTimeKind.Utc).AddTicks(3741),
                            Description = "Build logic for the multiplication operation",
                            DeveloperId = 3,
                            Name = "Make multiplication logic",
                            ProjectId = 1,
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            Deadline = new DateTime(2023, 10, 7, 10, 52, 1, 150, DateTimeKind.Utc).AddTicks(3741),
                            Description = "Integrate App with an Weather API",
                            DeveloperId = 3,
                            Name = "Integrate Weather API",
                            ProjectId = 2,
                            State = 3
                        },
                        new
                        {
                            Id = 5,
                            Deadline = new DateTime(2023, 10, 7, 10, 52, 1, 150, DateTimeKind.Utc).AddTicks(3742),
                            Description = "Build a search bar for user search",
                            DeveloperId = 2,
                            Name = "Make a search bar",
                            ProjectId = 2,
                            State = 2
                        },
                        new
                        {
                            Id = 6,
                            Deadline = new DateTime(2023, 11, 6, 10, 52, 1, 150, DateTimeKind.Utc).AddTicks(3743),
                            Description = "Deploy app online",
                            DeveloperId = 3,
                            Name = "Deploy app",
                            ProjectId = 2,
                            State = 1
                        });
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johnmanager@email.com",
                            FirstName = "John",
                            LastName = "Marks",
                            Password = "password",
                            Role = "manager"
                        },
                        new
                        {
                            Id = 2,
                            Email = "markdev@email.com",
                            FirstName = "Mark",
                            LastName = "Anthony",
                            Password = "passwordmark",
                            Role = "developer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "annadev@email.com",
                            FirstName = "Anna",
                            LastName = "Peters",
                            Password = "passwordanna",
                            Role = "developer"
                        });
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Project", b =>
                {
                    b.HasOne("ProjectManagerApp.Entities.Manager", "ManagerAssignedTo")
                        .WithMany("Projects")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagerAssignedTo");
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Task", b =>
                {
                    b.HasOne("ProjectManagerApp.Entities.Developer", "DeveloperAssignedTo")
                        .WithMany("Tasks")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagerApp.Entities.Project", "ProjectAssociatedTo")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeveloperAssignedTo");

                    b.Navigation("ProjectAssociatedTo");
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Developer", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Manager", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ProjectManagerApp.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
